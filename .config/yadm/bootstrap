#!/bin/sh

cd "$HOME"

system_type=$(uname -s)

if [ "$system_type" = "Darwin" ]; then
  # This should always be safe to run, I think
  echo "Updating yadm submodules"
  yadm submodule update --init --recursive

  if ! xcode-select -p 1>/dev/null; then
    echo "Installing xcode command line tools"
    xcode-select --install
  fi

  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  if [ ! -f "$HOME/.ssh/id_ed25519" ]; then
    echo "Generating SSH key"
    ssh-keygen -t ed25519 -C "maeve@aha.io"
    eval "$(ssh-agent -s)"
    touch $HOME/.ssh/config
    echo "Host *
  AddKeysToAgent yes
  UseKeychain yes
  IdentityFile ~/.ssh/id_ed25519" >> $HOME/.ssh/config
    ssh-add -K $HOME/.ssh/id_ed25519
    pbcopy < $HOME/.ssh/id_ed25519.pub
    echo "**************************************************************************"
    echo "The contents of ~/.ssh/id_ed25519.pub have been copied to the clipboard."
    echo "Register the key on Github at  https://github.com/settings/keys"
    echo "**************************************************************************"
  fi

  if [ ! -d "$HOME/.oh-my-zsh" ]; then
    echo "Installing oh-my-zsh"
    CHSH=yes RUNZSH=no KEEP_ZSHRC=yes sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  fi

  if [ -f "$HOME/.Brewfile" ]; then
    echo "Updating homebrew bundle"
    brew bundle --global
    brew link --force libpq
  fi

  echo "Configuring asdf"
  asdf plugin-add ruby https://github.com/asdf-vm/asdf-ruby.git
  asdf plugin-add nodejs https://github.com/asdf-vm/asdf-nodejs.git

  echo "Installing asdf dependencies"
  # Do this inside a shell so that all env vars are set
  zsh -lc "asdf install"

  if [ ! -f "$HOME/.aws/credentials" ]; then
    echo "Configuring aws cli"
    aws configure
  fi

  if [ ! -f "$HOME/.zshenv.local" ]; then
    echo "Creating .zshenv.local (edit to add sensitive environment variables)"
    cp "$HOME/.zshenv.local.example" "$HOME/.zshenv.local"
  fi

  # Neovim will bootstrap itself the first time it is opened
  if command -v nvim >/dev/null 2>&1; then
    echo "Bootstrapping neovim"
    nvim '+PlugUpdate' '+PlugClean!' '+CocInstall coc-tsserver coc-solargraph coc-json coc-docker' '+qall'
  fi

  echo "Updating the yadm repo origin URL"
  yadm remote set-url origin "git@github.com:maeve/dotfiles.git"

  if [ ! -d "$HOME/.docker" ]; then
    echo "Bootstrapping docker"
    open /Applications/Docker.app
  fi

  echo "Don't forget to restart your shell!"
fi
