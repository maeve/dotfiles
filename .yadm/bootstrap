#!/bin/bash

system_type=$(uname -s)

if [ "$system_type" = "Darwin" ]; then
  if [ -f "$HOME/.bash_profile" ]; then
    echo "Initializing shell"
    # If this is the very first time we're bootstrapping, then this will not
    # have been sourced yet; otherwise, it harms nothing
    source "$HOME/.bash_profile"
  fi

  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  if [ -f "$HOME/.Brewfile" ]; then
    echo "Updating homebrew bundle"
    brew bundle --global
  fi

  # This should always be safe to run, I think
  echo "Updating yadm submodules"
  yadm submodule update --init --recursive

  if [ ! -f "$HOME/.local/share/nvim/site/autoload/plug.vim" ]; then
    echo "Downloading vim-plug"
    curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
      https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  fi

  # TODO: need to investigate whether this is the best way to bootstrap
  # vim-plug
  echo "Bootstrapping neovim"
  nvim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'

  if [ -d "$HOME/.iterm2" ]; then
    echo "Configuring iterm2"
    # If iterm2 has ever been run before, there will be a cached set of prefs
    # we need to blow away first
    defaults delete com.googlecode.iterm2
    defaults write com.googlecode.iterm2 LoadPrefsFromCustomFolder -bool true
    defaults write com.googlecode.iterm2 PrefsCustomFolder "$HOME/.iterm2"
  fi

  if command -v base16_tomorrow-night >/dev/null 2>&1; then
    echo "Setting up 256 color space for terminal"
    base16_tomorrow-night
  fi

fi
